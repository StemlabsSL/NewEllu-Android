// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddNewEventBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llEventEndTime;

  @NonNull
  public final LinearLayout llEventStartTime;

  @NonNull
  public final LinearLayout llNotification;

  @NonNull
  public final RecyclerView rvCalender;

  @NonNull
  public final RecyclerView rvEventColor;

  @NonNull
  public final RecyclerView rvEventPerson;

  @NonNull
  public final TextView tvCreateEventLBL;

  @NonNull
  public final TextView tvEventEndTime;

  @NonNull
  public final EditText tvEventLocation;

  @NonNull
  public final TextView tvEventStartTime;

  @NonNull
  public final EditText tvEventTitle;

  private FragmentAddNewEventBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llEventEndTime, @NonNull LinearLayout llEventStartTime,
      @NonNull LinearLayout llNotification, @NonNull RecyclerView rvCalender,
      @NonNull RecyclerView rvEventColor, @NonNull RecyclerView rvEventPerson,
      @NonNull TextView tvCreateEventLBL, @NonNull TextView tvEventEndTime,
      @NonNull EditText tvEventLocation, @NonNull TextView tvEventStartTime,
      @NonNull EditText tvEventTitle) {
    this.rootView = rootView;
    this.llEventEndTime = llEventEndTime;
    this.llEventStartTime = llEventStartTime;
    this.llNotification = llNotification;
    this.rvCalender = rvCalender;
    this.rvEventColor = rvEventColor;
    this.rvEventPerson = rvEventPerson;
    this.tvCreateEventLBL = tvCreateEventLBL;
    this.tvEventEndTime = tvEventEndTime;
    this.tvEventLocation = tvEventLocation;
    this.tvEventStartTime = tvEventStartTime;
    this.tvEventTitle = tvEventTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddNewEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddNewEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_new_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddNewEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.llEventEndTime;
      LinearLayout llEventEndTime = rootView.findViewById(id);
      if (llEventEndTime == null) {
        break missingId;
      }

      id = R.id.llEventStartTime;
      LinearLayout llEventStartTime = rootView.findViewById(id);
      if (llEventStartTime == null) {
        break missingId;
      }

      id = R.id.llNotification;
      LinearLayout llNotification = rootView.findViewById(id);
      if (llNotification == null) {
        break missingId;
      }

      id = R.id.rvCalender;
      RecyclerView rvCalender = rootView.findViewById(id);
      if (rvCalender == null) {
        break missingId;
      }

      id = R.id.rvEventColor;
      RecyclerView rvEventColor = rootView.findViewById(id);
      if (rvEventColor == null) {
        break missingId;
      }

      id = R.id.rvEventPerson;
      RecyclerView rvEventPerson = rootView.findViewById(id);
      if (rvEventPerson == null) {
        break missingId;
      }

      id = R.id.tvCreateEventLBL;
      TextView tvCreateEventLBL = rootView.findViewById(id);
      if (tvCreateEventLBL == null) {
        break missingId;
      }

      id = R.id.tvEventEndTime;
      TextView tvEventEndTime = rootView.findViewById(id);
      if (tvEventEndTime == null) {
        break missingId;
      }

      id = R.id.tvEventLocation;
      EditText tvEventLocation = rootView.findViewById(id);
      if (tvEventLocation == null) {
        break missingId;
      }

      id = R.id.tvEventStartTime;
      TextView tvEventStartTime = rootView.findViewById(id);
      if (tvEventStartTime == null) {
        break missingId;
      }

      id = R.id.tvEventTitle;
      EditText tvEventTitle = rootView.findViewById(id);
      if (tvEventTitle == null) {
        break missingId;
      }

      return new FragmentAddNewEventBinding((LinearLayout) rootView, llEventEndTime,
          llEventStartTime, llNotification, rvCalender, rvEventColor, rvEventPerson,
          tvCreateEventLBL, tvEventEndTime, tvEventLocation, tvEventStartTime, tvEventTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
