// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMeetSenderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText edtLetMeetLocation;

  @NonNull
  public final EditText edtLetMeetTitle;

  @NonNull
  public final EditText edtSomethingElse;

  @NonNull
  public final ImageView imgMap;

  @NonNull
  public final LinearLayout llLetMeetDate;

  @NonNull
  public final LinearLayout llLetMeetTime;

  @NonNull
  public final LinearLayout llLetReceiverMeetDate;

  @NonNull
  public final LinearLayout llLetRecieverMeetTime;

  @NonNull
  public final LinearLayout llMeetDateTime;

  @NonNull
  public final LinearLayout llReceiverMeetDateTime;

  @NonNull
  public final LinearLayout llReceiverMeetLocation;

  @NonNull
  public final LinearLayout llReceiverTopView;

  @NonNull
  public final LinearLayout llReceiverView;

  @NonNull
  public final LinearLayout llResponse;

  @NonNull
  public final LinearLayout llSenderView;

  @NonNull
  public final RelativeLayout rlWhereLetMeetLocation;

  @NonNull
  public final RecyclerView rvMeetPerson;

  @NonNull
  public final TextView tvLaunchLBL;

  @NonNull
  public final TextView tvLetMeetDate;

  @NonNull
  public final TextView tvLetMeetTime;

  @NonNull
  public final TextView tvLetRecieverMeetDate;

  @NonNull
  public final TextView tvLetRecieverMeetTime;

  @NonNull
  public final TextView tvNOLBL;

  @NonNull
  public final TextView tvResponseLBL;

  @NonNull
  public final TextView tvSendLBL;

  @NonNull
  public final TextView tvWhoCommingLBL;

  @NonNull
  public final TextView tvYESLBL;

  private FragmentMeetSenderBinding(@NonNull LinearLayout rootView,
      @NonNull EditText edtLetMeetLocation, @NonNull EditText edtLetMeetTitle,
      @NonNull EditText edtSomethingElse, @NonNull ImageView imgMap,
      @NonNull LinearLayout llLetMeetDate, @NonNull LinearLayout llLetMeetTime,
      @NonNull LinearLayout llLetReceiverMeetDate, @NonNull LinearLayout llLetRecieverMeetTime,
      @NonNull LinearLayout llMeetDateTime, @NonNull LinearLayout llReceiverMeetDateTime,
      @NonNull LinearLayout llReceiverMeetLocation, @NonNull LinearLayout llReceiverTopView,
      @NonNull LinearLayout llReceiverView, @NonNull LinearLayout llResponse,
      @NonNull LinearLayout llSenderView, @NonNull RelativeLayout rlWhereLetMeetLocation,
      @NonNull RecyclerView rvMeetPerson, @NonNull TextView tvLaunchLBL,
      @NonNull TextView tvLetMeetDate, @NonNull TextView tvLetMeetTime,
      @NonNull TextView tvLetRecieverMeetDate, @NonNull TextView tvLetRecieverMeetTime,
      @NonNull TextView tvNOLBL, @NonNull TextView tvResponseLBL, @NonNull TextView tvSendLBL,
      @NonNull TextView tvWhoCommingLBL, @NonNull TextView tvYESLBL) {
    this.rootView = rootView;
    this.edtLetMeetLocation = edtLetMeetLocation;
    this.edtLetMeetTitle = edtLetMeetTitle;
    this.edtSomethingElse = edtSomethingElse;
    this.imgMap = imgMap;
    this.llLetMeetDate = llLetMeetDate;
    this.llLetMeetTime = llLetMeetTime;
    this.llLetReceiverMeetDate = llLetReceiverMeetDate;
    this.llLetRecieverMeetTime = llLetRecieverMeetTime;
    this.llMeetDateTime = llMeetDateTime;
    this.llReceiverMeetDateTime = llReceiverMeetDateTime;
    this.llReceiverMeetLocation = llReceiverMeetLocation;
    this.llReceiverTopView = llReceiverTopView;
    this.llReceiverView = llReceiverView;
    this.llResponse = llResponse;
    this.llSenderView = llSenderView;
    this.rlWhereLetMeetLocation = rlWhereLetMeetLocation;
    this.rvMeetPerson = rvMeetPerson;
    this.tvLaunchLBL = tvLaunchLBL;
    this.tvLetMeetDate = tvLetMeetDate;
    this.tvLetMeetTime = tvLetMeetTime;
    this.tvLetRecieverMeetDate = tvLetRecieverMeetDate;
    this.tvLetRecieverMeetTime = tvLetRecieverMeetTime;
    this.tvNOLBL = tvNOLBL;
    this.tvResponseLBL = tvResponseLBL;
    this.tvSendLBL = tvSendLBL;
    this.tvWhoCommingLBL = tvWhoCommingLBL;
    this.tvYESLBL = tvYESLBL;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMeetSenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMeetSenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_meet_sender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMeetSenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtLetMeetLocation;
      EditText edtLetMeetLocation = rootView.findViewById(id);
      if (edtLetMeetLocation == null) {
        break missingId;
      }

      id = R.id.edtLetMeetTitle;
      EditText edtLetMeetTitle = rootView.findViewById(id);
      if (edtLetMeetTitle == null) {
        break missingId;
      }

      id = R.id.edtSomethingElse;
      EditText edtSomethingElse = rootView.findViewById(id);
      if (edtSomethingElse == null) {
        break missingId;
      }

      id = R.id.imgMap;
      ImageView imgMap = rootView.findViewById(id);
      if (imgMap == null) {
        break missingId;
      }

      id = R.id.llLetMeetDate;
      LinearLayout llLetMeetDate = rootView.findViewById(id);
      if (llLetMeetDate == null) {
        break missingId;
      }

      id = R.id.llLetMeetTime;
      LinearLayout llLetMeetTime = rootView.findViewById(id);
      if (llLetMeetTime == null) {
        break missingId;
      }

      id = R.id.llLetReceiverMeetDate;
      LinearLayout llLetReceiverMeetDate = rootView.findViewById(id);
      if (llLetReceiverMeetDate == null) {
        break missingId;
      }

      id = R.id.llLetRecieverMeetTime;
      LinearLayout llLetRecieverMeetTime = rootView.findViewById(id);
      if (llLetRecieverMeetTime == null) {
        break missingId;
      }

      id = R.id.llMeetDateTime;
      LinearLayout llMeetDateTime = rootView.findViewById(id);
      if (llMeetDateTime == null) {
        break missingId;
      }

      id = R.id.llReceiverMeetDateTime;
      LinearLayout llReceiverMeetDateTime = rootView.findViewById(id);
      if (llReceiverMeetDateTime == null) {
        break missingId;
      }

      id = R.id.llReceiverMeetLocation;
      LinearLayout llReceiverMeetLocation = rootView.findViewById(id);
      if (llReceiverMeetLocation == null) {
        break missingId;
      }

      id = R.id.llReceiverTopView;
      LinearLayout llReceiverTopView = rootView.findViewById(id);
      if (llReceiverTopView == null) {
        break missingId;
      }

      id = R.id.llReceiverView;
      LinearLayout llReceiverView = rootView.findViewById(id);
      if (llReceiverView == null) {
        break missingId;
      }

      id = R.id.llResponse;
      LinearLayout llResponse = rootView.findViewById(id);
      if (llResponse == null) {
        break missingId;
      }

      id = R.id.llSenderView;
      LinearLayout llSenderView = rootView.findViewById(id);
      if (llSenderView == null) {
        break missingId;
      }

      id = R.id.rlWhereLetMeetLocation;
      RelativeLayout rlWhereLetMeetLocation = rootView.findViewById(id);
      if (rlWhereLetMeetLocation == null) {
        break missingId;
      }

      id = R.id.rvMeetPerson;
      RecyclerView rvMeetPerson = rootView.findViewById(id);
      if (rvMeetPerson == null) {
        break missingId;
      }

      id = R.id.tvLaunchLBL;
      TextView tvLaunchLBL = rootView.findViewById(id);
      if (tvLaunchLBL == null) {
        break missingId;
      }

      id = R.id.tvLetMeetDate;
      TextView tvLetMeetDate = rootView.findViewById(id);
      if (tvLetMeetDate == null) {
        break missingId;
      }

      id = R.id.tvLetMeetTime;
      TextView tvLetMeetTime = rootView.findViewById(id);
      if (tvLetMeetTime == null) {
        break missingId;
      }

      id = R.id.tvLetRecieverMeetDate;
      TextView tvLetRecieverMeetDate = rootView.findViewById(id);
      if (tvLetRecieverMeetDate == null) {
        break missingId;
      }

      id = R.id.tvLetRecieverMeetTime;
      TextView tvLetRecieverMeetTime = rootView.findViewById(id);
      if (tvLetRecieverMeetTime == null) {
        break missingId;
      }

      id = R.id.tvNOLBL;
      TextView tvNOLBL = rootView.findViewById(id);
      if (tvNOLBL == null) {
        break missingId;
      }

      id = R.id.tvResponseLBL;
      TextView tvResponseLBL = rootView.findViewById(id);
      if (tvResponseLBL == null) {
        break missingId;
      }

      id = R.id.tvSendLBL;
      TextView tvSendLBL = rootView.findViewById(id);
      if (tvSendLBL == null) {
        break missingId;
      }

      id = R.id.tvWhoCommingLBL;
      TextView tvWhoCommingLBL = rootView.findViewById(id);
      if (tvWhoCommingLBL == null) {
        break missingId;
      }

      id = R.id.tvYESLBL;
      TextView tvYESLBL = rootView.findViewById(id);
      if (tvYESLBL == null) {
        break missingId;
      }

      return new FragmentMeetSenderBinding((LinearLayout) rootView, edtLetMeetLocation,
          edtLetMeetTitle, edtSomethingElse, imgMap, llLetMeetDate, llLetMeetTime,
          llLetReceiverMeetDate, llLetRecieverMeetTime, llMeetDateTime, llReceiverMeetDateTime,
          llReceiverMeetLocation, llReceiverTopView, llReceiverView, llResponse, llSenderView,
          rlWhereLetMeetLocation, rvMeetPerson, tvLaunchLBL, tvLetMeetDate, tvLetMeetTime,
          tvLetRecieverMeetDate, tvLetRecieverMeetTime, tvNOLBL, tvResponseLBL, tvSendLBL,
          tvWhoCommingLBL, tvYESLBL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
