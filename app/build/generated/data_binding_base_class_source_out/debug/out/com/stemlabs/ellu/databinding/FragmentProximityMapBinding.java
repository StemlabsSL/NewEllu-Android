// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProximityMapBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgChat;

  @NonNull
  public final ImageView imgNavigateMap;

  @NonNull
  public final ImageView imgNotification;

  @NonNull
  public final ImageView imgPhone;

  @NonNull
  public final ImageView imgVideo;

  @NonNull
  public final LinearLayout llBottomGroup;

  @NonNull
  public final LinearLayout llUserAction;

  @NonNull
  public final LinearLayout llUserInfoAndAction;

  @NonNull
  public final RelativeLayout rlMap;

  @NonNull
  public final RelativeLayout rlUserInfo;

  @NonNull
  public final RecyclerView rvBottomProximityMapUser;

  @NonNull
  public final RecyclerView rvGroup;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvEndProximity;

  @NonNull
  public final TextView tvGroupName;

  @NonNull
  public final TextView tvProximityUsername;

  @NonNull
  public final TextView tvSetDirectionsOnMap;

  private FragmentProximityMapBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgChat,
      @NonNull ImageView imgNavigateMap, @NonNull ImageView imgNotification,
      @NonNull ImageView imgPhone, @NonNull ImageView imgVideo, @NonNull LinearLayout llBottomGroup,
      @NonNull LinearLayout llUserAction, @NonNull LinearLayout llUserInfoAndAction,
      @NonNull RelativeLayout rlMap, @NonNull RelativeLayout rlUserInfo,
      @NonNull RecyclerView rvBottomProximityMapUser, @NonNull RecyclerView rvGroup,
      @NonNull TextView tvDistance, @NonNull TextView tvEndProximity, @NonNull TextView tvGroupName,
      @NonNull TextView tvProximityUsername, @NonNull TextView tvSetDirectionsOnMap) {
    this.rootView = rootView;
    this.imgChat = imgChat;
    this.imgNavigateMap = imgNavigateMap;
    this.imgNotification = imgNotification;
    this.imgPhone = imgPhone;
    this.imgVideo = imgVideo;
    this.llBottomGroup = llBottomGroup;
    this.llUserAction = llUserAction;
    this.llUserInfoAndAction = llUserInfoAndAction;
    this.rlMap = rlMap;
    this.rlUserInfo = rlUserInfo;
    this.rvBottomProximityMapUser = rvBottomProximityMapUser;
    this.rvGroup = rvGroup;
    this.tvDistance = tvDistance;
    this.tvEndProximity = tvEndProximity;
    this.tvGroupName = tvGroupName;
    this.tvProximityUsername = tvProximityUsername;
    this.tvSetDirectionsOnMap = tvSetDirectionsOnMap;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProximityMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProximityMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_proximity_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProximityMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgChat;
      ImageView imgChat = rootView.findViewById(id);
      if (imgChat == null) {
        break missingId;
      }

      id = R.id.imgNavigateMap;
      ImageView imgNavigateMap = rootView.findViewById(id);
      if (imgNavigateMap == null) {
        break missingId;
      }

      id = R.id.imgNotification;
      ImageView imgNotification = rootView.findViewById(id);
      if (imgNotification == null) {
        break missingId;
      }

      id = R.id.imgPhone;
      ImageView imgPhone = rootView.findViewById(id);
      if (imgPhone == null) {
        break missingId;
      }

      id = R.id.imgVideo;
      ImageView imgVideo = rootView.findViewById(id);
      if (imgVideo == null) {
        break missingId;
      }

      id = R.id.llBottomGroup;
      LinearLayout llBottomGroup = rootView.findViewById(id);
      if (llBottomGroup == null) {
        break missingId;
      }

      id = R.id.llUserAction;
      LinearLayout llUserAction = rootView.findViewById(id);
      if (llUserAction == null) {
        break missingId;
      }

      id = R.id.llUserInfoAndAction;
      LinearLayout llUserInfoAndAction = rootView.findViewById(id);
      if (llUserInfoAndAction == null) {
        break missingId;
      }

      id = R.id.rlMap;
      RelativeLayout rlMap = rootView.findViewById(id);
      if (rlMap == null) {
        break missingId;
      }

      id = R.id.rlUserInfo;
      RelativeLayout rlUserInfo = rootView.findViewById(id);
      if (rlUserInfo == null) {
        break missingId;
      }

      id = R.id.rvBottomProximityMapUser;
      RecyclerView rvBottomProximityMapUser = rootView.findViewById(id);
      if (rvBottomProximityMapUser == null) {
        break missingId;
      }

      id = R.id.rvGroup;
      RecyclerView rvGroup = rootView.findViewById(id);
      if (rvGroup == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = rootView.findViewById(id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvEndProximity;
      TextView tvEndProximity = rootView.findViewById(id);
      if (tvEndProximity == null) {
        break missingId;
      }

      id = R.id.tvGroupName;
      TextView tvGroupName = rootView.findViewById(id);
      if (tvGroupName == null) {
        break missingId;
      }

      id = R.id.tvProximityUsername;
      TextView tvProximityUsername = rootView.findViewById(id);
      if (tvProximityUsername == null) {
        break missingId;
      }

      id = R.id.tvSetDirectionsOnMap;
      TextView tvSetDirectionsOnMap = rootView.findViewById(id);
      if (tvSetDirectionsOnMap == null) {
        break missingId;
      }

      return new FragmentProximityMapBinding((LinearLayout) rootView, imgChat, imgNavigateMap,
          imgNotification, imgPhone, imgVideo, llBottomGroup, llUserAction, llUserInfoAndAction,
          rlMap, rlUserInfo, rvBottomProximityMapUser, rvGroup, tvDistance, tvEndProximity,
          tvGroupName, tvProximityUsername, tvSetDirectionsOnMap);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
