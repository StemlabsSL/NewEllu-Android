// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemviewListrowCalenderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout frameCalendarMain;

  @NonNull
  public final ImageView imgCalendarDots;

  @NonNull
  public final LinearLayout llMainCalender;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDay;

  private ItemviewListrowCalenderBinding(@NonNull LinearLayout rootView,
      @NonNull FrameLayout frameCalendarMain, @NonNull ImageView imgCalendarDots,
      @NonNull LinearLayout llMainCalender, @NonNull TextView tvDate, @NonNull TextView tvDay) {
    this.rootView = rootView;
    this.frameCalendarMain = frameCalendarMain;
    this.imgCalendarDots = imgCalendarDots;
    this.llMainCalender = llMainCalender;
    this.tvDate = tvDate;
    this.tvDay = tvDay;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemviewListrowCalenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemviewListrowCalenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.itemview_listrow_calender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemviewListrowCalenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frameCalendarMain;
      FrameLayout frameCalendarMain = rootView.findViewById(id);
      if (frameCalendarMain == null) {
        break missingId;
      }

      id = R.id.imgCalendarDots;
      ImageView imgCalendarDots = rootView.findViewById(id);
      if (imgCalendarDots == null) {
        break missingId;
      }

      id = R.id.llMainCalender;
      LinearLayout llMainCalender = rootView.findViewById(id);
      if (llMainCalender == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = rootView.findViewById(id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDay;
      TextView tvDay = rootView.findViewById(id);
      if (tvDay == null) {
        break missingId;
      }

      return new ItemviewListrowCalenderBinding((LinearLayout) rootView, frameCalendarMain,
          imgCalendarDots, llMainCalender, tvDate, tvDay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
