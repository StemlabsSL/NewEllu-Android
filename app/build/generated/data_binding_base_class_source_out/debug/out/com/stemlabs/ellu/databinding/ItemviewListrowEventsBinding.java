// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemviewListrowEventsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgMore;

  @NonNull
  public final LinearLayout itemLayout;

  @NonNull
  public final ImageView ivAddress;

  @NonNull
  public final ImageView ivDate;

  @NonNull
  public final ImageView ivPerson;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvUserName;

  private ItemviewListrowEventsBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgMore,
      @NonNull LinearLayout itemLayout, @NonNull ImageView ivAddress, @NonNull ImageView ivDate,
      @NonNull ImageView ivPerson, @NonNull TextView tvAddress, @NonNull TextView tvDate,
      @NonNull TextView tvTitle, @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.imgMore = imgMore;
    this.itemLayout = itemLayout;
    this.ivAddress = ivAddress;
    this.ivDate = ivDate;
    this.ivPerson = ivPerson;
    this.tvAddress = tvAddress;
    this.tvDate = tvDate;
    this.tvTitle = tvTitle;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemviewListrowEventsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemviewListrowEventsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.itemview_listrow_events, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemviewListrowEventsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgMore;
      ImageView imgMore = rootView.findViewById(id);
      if (imgMore == null) {
        break missingId;
      }

      LinearLayout itemLayout = (LinearLayout) rootView;

      id = R.id.ivAddress;
      ImageView ivAddress = rootView.findViewById(id);
      if (ivAddress == null) {
        break missingId;
      }

      id = R.id.ivDate;
      ImageView ivDate = rootView.findViewById(id);
      if (ivDate == null) {
        break missingId;
      }

      id = R.id.ivPerson;
      ImageView ivPerson = rootView.findViewById(id);
      if (ivPerson == null) {
        break missingId;
      }

      id = R.id.tvAddress;
      TextView tvAddress = rootView.findViewById(id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = rootView.findViewById(id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = rootView.findViewById(id);
      if (tvUserName == null) {
        break missingId;
      }

      return new ItemviewListrowEventsBinding((LinearLayout) rootView, imgMore, itemLayout,
          ivAddress, ivDate, ivPerson, tvAddress, tvDate, tvTitle, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
