// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import com.stemlabs.ellu.widgets.RoundRectCornerImageView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListrowSosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imgAwareMeetIcon;

  @NonNull
  public final RoundRectCornerImageView imgChatReceive;

  @NonNull
  public final RoundRectCornerImageView imgChatSend;

  @NonNull
  public final ImageView imgMap;

  @NonNull
  public final ImageView imgPlayReceive;

  @NonNull
  public final ImageView imgPlaySend;

  @NonNull
  public final CircleImageView imgProfileReceive;

  @NonNull
  public final ImageView imgReceiveArrow;

  @NonNull
  public final CircleImageView imgSeenSend;

  @NonNull
  public final LinearLayout llAudioReceive;

  @NonNull
  public final LinearLayout llAudioSend;

  @NonNull
  public final LinearLayout llAwareMeetView;

  @NonNull
  public final LinearLayout llProximityView;

  @NonNull
  public final FrameLayout rlReceiver;

  @NonNull
  public final FrameLayout rlSend;

  @NonNull
  public final AppCompatSeekBar seekbarAudioReceive;

  @NonNull
  public final AppCompatSeekBar seekbarAudioSend;

  @NonNull
  public final TextView tvAcceptProximity;

  @NonNull
  public final TextView tvAwareMeetTitle;

  @NonNull
  public final TextView tvMessageReceive;

  @NonNull
  public final TextView tvMessageSend;

  @NonNull
  public final TextView tvTimeAudioReceive;

  @NonNull
  public final TextView tvTimeAudioSend;

  @NonNull
  public final TextView tvTimeReceive;

  @NonNull
  public final TextView tvTimeSend;

  @NonNull
  public final TextView tvUserNameReceive;

  @NonNull
  public final TextView tvUserNameSend;

  private ListrowSosBinding(@NonNull RelativeLayout rootView, @NonNull ImageView imgAwareMeetIcon,
      @NonNull RoundRectCornerImageView imgChatReceive,
      @NonNull RoundRectCornerImageView imgChatSend, @NonNull ImageView imgMap,
      @NonNull ImageView imgPlayReceive, @NonNull ImageView imgPlaySend,
      @NonNull CircleImageView imgProfileReceive, @NonNull ImageView imgReceiveArrow,
      @NonNull CircleImageView imgSeenSend, @NonNull LinearLayout llAudioReceive,
      @NonNull LinearLayout llAudioSend, @NonNull LinearLayout llAwareMeetView,
      @NonNull LinearLayout llProximityView, @NonNull FrameLayout rlReceiver,
      @NonNull FrameLayout rlSend, @NonNull AppCompatSeekBar seekbarAudioReceive,
      @NonNull AppCompatSeekBar seekbarAudioSend, @NonNull TextView tvAcceptProximity,
      @NonNull TextView tvAwareMeetTitle, @NonNull TextView tvMessageReceive,
      @NonNull TextView tvMessageSend, @NonNull TextView tvTimeAudioReceive,
      @NonNull TextView tvTimeAudioSend, @NonNull TextView tvTimeReceive,
      @NonNull TextView tvTimeSend, @NonNull TextView tvUserNameReceive,
      @NonNull TextView tvUserNameSend) {
    this.rootView = rootView;
    this.imgAwareMeetIcon = imgAwareMeetIcon;
    this.imgChatReceive = imgChatReceive;
    this.imgChatSend = imgChatSend;
    this.imgMap = imgMap;
    this.imgPlayReceive = imgPlayReceive;
    this.imgPlaySend = imgPlaySend;
    this.imgProfileReceive = imgProfileReceive;
    this.imgReceiveArrow = imgReceiveArrow;
    this.imgSeenSend = imgSeenSend;
    this.llAudioReceive = llAudioReceive;
    this.llAudioSend = llAudioSend;
    this.llAwareMeetView = llAwareMeetView;
    this.llProximityView = llProximityView;
    this.rlReceiver = rlReceiver;
    this.rlSend = rlSend;
    this.seekbarAudioReceive = seekbarAudioReceive;
    this.seekbarAudioSend = seekbarAudioSend;
    this.tvAcceptProximity = tvAcceptProximity;
    this.tvAwareMeetTitle = tvAwareMeetTitle;
    this.tvMessageReceive = tvMessageReceive;
    this.tvMessageSend = tvMessageSend;
    this.tvTimeAudioReceive = tvTimeAudioReceive;
    this.tvTimeAudioSend = tvTimeAudioSend;
    this.tvTimeReceive = tvTimeReceive;
    this.tvTimeSend = tvTimeSend;
    this.tvUserNameReceive = tvUserNameReceive;
    this.tvUserNameSend = tvUserNameSend;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListrowSosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListrowSosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.listrow_sos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListrowSosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgAwareMeetIcon;
      ImageView imgAwareMeetIcon = rootView.findViewById(id);
      if (imgAwareMeetIcon == null) {
        break missingId;
      }

      id = R.id.imgChatReceive;
      RoundRectCornerImageView imgChatReceive = rootView.findViewById(id);
      if (imgChatReceive == null) {
        break missingId;
      }

      id = R.id.imgChatSend;
      RoundRectCornerImageView imgChatSend = rootView.findViewById(id);
      if (imgChatSend == null) {
        break missingId;
      }

      id = R.id.imgMap;
      ImageView imgMap = rootView.findViewById(id);
      if (imgMap == null) {
        break missingId;
      }

      id = R.id.imgPlayReceive;
      ImageView imgPlayReceive = rootView.findViewById(id);
      if (imgPlayReceive == null) {
        break missingId;
      }

      id = R.id.imgPlaySend;
      ImageView imgPlaySend = rootView.findViewById(id);
      if (imgPlaySend == null) {
        break missingId;
      }

      id = R.id.imgProfileReceive;
      CircleImageView imgProfileReceive = rootView.findViewById(id);
      if (imgProfileReceive == null) {
        break missingId;
      }

      id = R.id.imgReceiveArrow;
      ImageView imgReceiveArrow = rootView.findViewById(id);
      if (imgReceiveArrow == null) {
        break missingId;
      }

      id = R.id.imgSeenSend;
      CircleImageView imgSeenSend = rootView.findViewById(id);
      if (imgSeenSend == null) {
        break missingId;
      }

      id = R.id.llAudioReceive;
      LinearLayout llAudioReceive = rootView.findViewById(id);
      if (llAudioReceive == null) {
        break missingId;
      }

      id = R.id.llAudioSend;
      LinearLayout llAudioSend = rootView.findViewById(id);
      if (llAudioSend == null) {
        break missingId;
      }

      id = R.id.llAwareMeetView;
      LinearLayout llAwareMeetView = rootView.findViewById(id);
      if (llAwareMeetView == null) {
        break missingId;
      }

      id = R.id.llProximityView;
      LinearLayout llProximityView = rootView.findViewById(id);
      if (llProximityView == null) {
        break missingId;
      }

      id = R.id.rlReceiver;
      FrameLayout rlReceiver = rootView.findViewById(id);
      if (rlReceiver == null) {
        break missingId;
      }

      id = R.id.rlSend;
      FrameLayout rlSend = rootView.findViewById(id);
      if (rlSend == null) {
        break missingId;
      }

      id = R.id.seekbarAudioReceive;
      AppCompatSeekBar seekbarAudioReceive = rootView.findViewById(id);
      if (seekbarAudioReceive == null) {
        break missingId;
      }

      id = R.id.seekbarAudioSend;
      AppCompatSeekBar seekbarAudioSend = rootView.findViewById(id);
      if (seekbarAudioSend == null) {
        break missingId;
      }

      id = R.id.tvAcceptProximity;
      TextView tvAcceptProximity = rootView.findViewById(id);
      if (tvAcceptProximity == null) {
        break missingId;
      }

      id = R.id.tvAwareMeetTitle;
      TextView tvAwareMeetTitle = rootView.findViewById(id);
      if (tvAwareMeetTitle == null) {
        break missingId;
      }

      id = R.id.tvMessageReceive;
      TextView tvMessageReceive = rootView.findViewById(id);
      if (tvMessageReceive == null) {
        break missingId;
      }

      id = R.id.tvMessageSend;
      TextView tvMessageSend = rootView.findViewById(id);
      if (tvMessageSend == null) {
        break missingId;
      }

      id = R.id.tvTimeAudioReceive;
      TextView tvTimeAudioReceive = rootView.findViewById(id);
      if (tvTimeAudioReceive == null) {
        break missingId;
      }

      id = R.id.tvTimeAudioSend;
      TextView tvTimeAudioSend = rootView.findViewById(id);
      if (tvTimeAudioSend == null) {
        break missingId;
      }

      id = R.id.tvTimeReceive;
      TextView tvTimeReceive = rootView.findViewById(id);
      if (tvTimeReceive == null) {
        break missingId;
      }

      id = R.id.tvTimeSend;
      TextView tvTimeSend = rootView.findViewById(id);
      if (tvTimeSend == null) {
        break missingId;
      }

      id = R.id.tvUserNameReceive;
      TextView tvUserNameReceive = rootView.findViewById(id);
      if (tvUserNameReceive == null) {
        break missingId;
      }

      id = R.id.tvUserNameSend;
      TextView tvUserNameSend = rootView.findViewById(id);
      if (tvUserNameSend == null) {
        break missingId;
      }

      return new ListrowSosBinding((RelativeLayout) rootView, imgAwareMeetIcon, imgChatReceive,
          imgChatSend, imgMap, imgPlayReceive, imgPlaySend, imgProfileReceive, imgReceiveArrow,
          imgSeenSend, llAudioReceive, llAudioSend, llAwareMeetView, llProximityView, rlReceiver,
          rlSend, seekbarAudioReceive, seekbarAudioSend, tvAcceptProximity, tvAwareMeetTitle,
          tvMessageReceive, tvMessageSend, tvTimeAudioReceive, tvTimeAudioSend, tvTimeReceive,
          tvTimeSend, tvUserNameReceive, tvUserNameSend);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
