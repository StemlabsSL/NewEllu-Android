// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProfileToolbarBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final CircleImageView imgChatToolbarUserProfile;

  @NonNull
  public final ImageView imgClose;

  @NonNull
  public final ImageView imgLeftIcon;

  @NonNull
  public final ImageView imgProfile;

  @NonNull
  public final ImageView imgSearch;

  @NonNull
  public final LinearLayout llProfileToolbar;

  @NonNull
  public final LinearLayout llSearchToolbar;

  private ProfileToolbarBinding(@NonNull RelativeLayout rootView, @NonNull EditText edtSearch,
      @NonNull CircleImageView imgChatToolbarUserProfile, @NonNull ImageView imgClose,
      @NonNull ImageView imgLeftIcon, @NonNull ImageView imgProfile, @NonNull ImageView imgSearch,
      @NonNull LinearLayout llProfileToolbar, @NonNull LinearLayout llSearchToolbar) {
    this.rootView = rootView;
    this.edtSearch = edtSearch;
    this.imgChatToolbarUserProfile = imgChatToolbarUserProfile;
    this.imgClose = imgClose;
    this.imgLeftIcon = imgLeftIcon;
    this.imgProfile = imgProfile;
    this.imgSearch = imgSearch;
    this.llProfileToolbar = llProfileToolbar;
    this.llSearchToolbar = llSearchToolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProfileToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProfileToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.profile_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProfileToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtSearch;
      EditText edtSearch = rootView.findViewById(id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.imgChatToolbarUserProfile;
      CircleImageView imgChatToolbarUserProfile = rootView.findViewById(id);
      if (imgChatToolbarUserProfile == null) {
        break missingId;
      }

      id = R.id.imgClose;
      ImageView imgClose = rootView.findViewById(id);
      if (imgClose == null) {
        break missingId;
      }

      id = R.id.imgLeftIcon;
      ImageView imgLeftIcon = rootView.findViewById(id);
      if (imgLeftIcon == null) {
        break missingId;
      }

      id = R.id.imgProfile;
      ImageView imgProfile = rootView.findViewById(id);
      if (imgProfile == null) {
        break missingId;
      }

      id = R.id.imgSearch;
      ImageView imgSearch = rootView.findViewById(id);
      if (imgSearch == null) {
        break missingId;
      }

      id = R.id.llProfileToolbar;
      LinearLayout llProfileToolbar = rootView.findViewById(id);
      if (llProfileToolbar == null) {
        break missingId;
      }

      id = R.id.llSearchToolbar;
      LinearLayout llSearchToolbar = rootView.findViewById(id);
      if (llSearchToolbar == null) {
        break missingId;
      }

      return new ProfileToolbarBinding((RelativeLayout) rootView, edtSearch,
          imgChatToolbarUserProfile, imgClose, imgLeftIcon, imgProfile, imgSearch, llProfileToolbar,
          llSearchToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
