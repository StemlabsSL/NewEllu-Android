// Generated by view binder compiler. Do not edit!
package com.stemlabs.ellu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.stemlabs.ellu.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SplashLayoutBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView imgElluSplash;

  @NonNull
  public final ImageView imgHeader;

  @NonNull
  public final CircleImageView imgWhiteCircular;

  @NonNull
  public final LinearLayout llcenterlayout;

  @NonNull
  public final FrameLayout mainContainer;

  private SplashLayoutBinding(@NonNull FrameLayout rootView, @NonNull ImageView imgElluSplash,
      @NonNull ImageView imgHeader, @NonNull CircleImageView imgWhiteCircular,
      @NonNull LinearLayout llcenterlayout, @NonNull FrameLayout mainContainer) {
    this.rootView = rootView;
    this.imgElluSplash = imgElluSplash;
    this.imgHeader = imgHeader;
    this.imgWhiteCircular = imgWhiteCircular;
    this.llcenterlayout = llcenterlayout;
    this.mainContainer = mainContainer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SplashLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SplashLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.splash_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SplashLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgElluSplash;
      ImageView imgElluSplash = rootView.findViewById(id);
      if (imgElluSplash == null) {
        break missingId;
      }

      id = R.id.imgHeader;
      ImageView imgHeader = rootView.findViewById(id);
      if (imgHeader == null) {
        break missingId;
      }

      id = R.id.imgWhiteCircular;
      CircleImageView imgWhiteCircular = rootView.findViewById(id);
      if (imgWhiteCircular == null) {
        break missingId;
      }

      id = R.id.llcenterlayout;
      LinearLayout llcenterlayout = rootView.findViewById(id);
      if (llcenterlayout == null) {
        break missingId;
      }

      FrameLayout mainContainer = (FrameLayout) rootView;

      return new SplashLayoutBinding((FrameLayout) rootView, imgElluSplash, imgHeader,
          imgWhiteCircular, llcenterlayout, mainContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
