// Generated by Dagger (https://dagger.dev).
package com.stemlabs.ellu.data;

import com.stemlabs.ellu.data.local.LocalData;
import com.stemlabs.ellu.data.remote.RemoteData;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataRepository_Factory implements Factory<DataRepository> {
  private final Provider<RemoteData> remoteRepositoryProvider;

  private final Provider<LocalData> localRepositoryProvider;

  public DataRepository_Factory(Provider<RemoteData> remoteRepositoryProvider,
      Provider<LocalData> localRepositoryProvider) {
    this.remoteRepositoryProvider = remoteRepositoryProvider;
    this.localRepositoryProvider = localRepositoryProvider;
  }

  @Override
  public DataRepository get() {
    return newInstance(remoteRepositoryProvider.get(), localRepositoryProvider.get());
  }

  public static DataRepository_Factory create(Provider<RemoteData> remoteRepositoryProvider,
      Provider<LocalData> localRepositoryProvider) {
    return new DataRepository_Factory(remoteRepositoryProvider, localRepositoryProvider);
  }

  public static DataRepository newInstance(RemoteData remoteRepository, LocalData localRepository) {
    return new DataRepository(remoteRepository, localRepository);
  }
}
